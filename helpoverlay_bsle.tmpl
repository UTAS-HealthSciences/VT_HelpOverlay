window.plugin = window.plugin || {};
window.plugin.helpoverlay = window.plugin.helpoverlay || plugin_helpOverlay();

window.help = window.help || {};

//Property getting helper function.
function getProp(property, type, pluginID)
{
  if(typeof pluginID !== "string") { pluginID = '{{p.id}}'; }
  if(typeof property !== "string") { console.error("Error in prop: property should be of type string. Type is " + typeof property); }
  if(typeof type !== "string") { console.error("Error in prop: type should be of type string. Type is " + typeof type); }

  var preStr = "ptplugin["+pluginID+"].settings[0].option[";  /* Concat with necessary var */  var endStr = '].value';
  var val = getKrValue(preStr+property+endStr, type);
  return val;
}

var p='{{p.id}}';

var deco = [];
if(getProp("text_font_underline", "bool", p)) { deco.push('underline'); }
if(getProp("text_font_strikethrough", "bool", p)) { deco.push('strikethrough'); }

var bc = ktools.Color.hex2rgb(getProp("button_backgroundColor", "string", p));
bc.push(getProp("button_backgroundAlpha", "float", p));

window.help = window.plugin.helpoverlay.register(p, {
  parent: '#panoDIV',
  id: p,
  button: {
    font: {
      size:       getProp("button_font_size", "int", p)+"px",
      family:     getProp("button_font_family", "string", p),
      decoration: deco.length == 0 ? "normal" : deco.join(' '),
      style:      getProp("button_font_italics", "bool", p) ? "italic" : "normal",
      weight:     getProp("button_font_bold", "bool", p) ? "bold" : "normal",
    },
    background: bc,
    size: {
      x: getProp('button_sizeX', 'int', p),
      y: getProp('button_sizeY', 'int', p),
    },
    position: getProp('button_position','string',p),
    offset: {
      x: getProp('button_offsetX', 'int', p),
      y: getProp('button_offsetY', 'int', p),
    },
    text: getProp('button_text', 'string', p),
    style: {},
  },
});
$(document).trigger('helpoverlay.ready');
$(document).on('helpoverlay-buttonclicked', function() {
  console.log('hiding window');
  window.help.visible(false);
});
